---

name: CI
on:
  pull_request:
  push:
    branches:
      - main
jobs:
  ok:
    runs-on: ubuntu-latest
    if: failure()
    needs:
      - lint
      - test
    steps:
      - run: exit 1
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: lint
        uses: reviewdog/action-golangci-lint@v2
  test:
    strategy:
      matrix:
        go_version:
          - stable
          - oldstable
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go_version }}
          cache: true
      - name: test
        run: go test -v -race -coverprofile=cover.out -covermode=atomic ./...
      - uses: k1LoW/octocov-action@v1
        if: ${{ matrix.go_version == 'stable' }}
  determine_release:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    outputs:
      will_release: ${{ steps.determine_release.outputs.new_release_published }}
    steps:
      - uses: actions/checkout@v4
      - id: determine_release
        uses: cycjimmy/semantic-release-action@v4
        with:
          dry_run: true
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ github.token }}
  release:
    runs-on: ubuntu-latest
    needs:
      - test
      - lint
      - determine_release
    if: ${{ needs.determine_release.outputs.will_release }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: cycjimmy/semantic-release-action@v4
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: true
      - uses: goreleaser/goreleaser-action@v2.9.1
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ github.token }}
